apiVersion: batch/v1
kind: Job
metadata:
  name: join-channel
  namespace: org1
spec:
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - name: join-channel
        image: hyperledger/fabric-tools:2.0
        command:
        - sh
        - -c
        - |
          peer channel fetch 0 -c allorgs -o orderer.org1:7050 --tls --cafile $ORDERER_TLS_ROOTCERT_FILE channel.block
          peer channel join -b channel.block -o orderer.org1:7050 --tls --cafile $ORDERER_TLS_ROOTCERT_FILE 
          peer channel update -c allorgs -f /var/hyperledger/channel-artifacts/anchor-peer-update.tx -o orderer.org1:7050 --tls  --cafile $ORDERER_TLS_ROOTCERT_FILE
        envFrom:
        - configMapRef:
            name: admin
        volumeMounts:
        - name: dockersocket 
          mountPath: "/host/var/run/docker.sock"
        - name: admin
          mountPath: "/etc/hyperledger/adminmsp"
        - name: client-root-tlscas
          mountPath: "/etc/hyperledger/fabric-peer/client-root-tlscas"
        - name: channel-artifacts
          mountPath: "/var/hyperledger/channel-artifacts"
      volumes:
      - name: dockersocket
        hostPath:
          path: "/var/run/docker.sock"
      - name: client-root-tlscas
        secret:
          secretName: client-root-tlscas
      - name: admin
        secret:
          secretName: admin
          items:
          - key: key.pem
            path: keystore/key.pem
          - key: cert.pem
            path: signcerts/cert.pem
          - key: tlsca-cert.pem
            path: tlsca/tlsca-cert.pem
          - key: ca-cert.pem
            path: cacerts/ca-cert.pem
          - key: config.yaml
            path: config.yaml
          - key: tls.crt
            path: tls/tls.crt
          - key: tls.key
            path: tls/tls.key
          - key: orderer-tlsca-cert.pem
            path: orderer-tlsca-cert.pem
          - key: core.yaml
            path: core.yaml
      - name: channel-artifacts
        secret:
          secretName: channel-artifacts  
      restartPolicy: Never

